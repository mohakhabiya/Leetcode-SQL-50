LeetCode Problem: 197. Rising Temperature

Problem Description:
Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the column with unique values for this table.

There are no different rows with the same recordDate.

This table contains information about the temperature on a certain day.

Task: Write a solution to find all dates' id with higher temperatures compared to their previous dates (yesterday).

Return: The result table in any order.

Example:
Input:

plaintext
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output:

plaintext
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation:

On 2015-01-02, the temperature was higher than the previous day (10 -> 25).

On 2015-01-04, the temperature was higher than the previous day (20 -> 30).

Solution:
The following SQL query selects the id from the Weather table where the temperature is higher compared to the previous day's temperature:

sql
-- SQL Solution to find all dates' id with higher temperatures compared to their previous dates (yesterday)
SELECT W1.id
FROM Weather W1
JOIN Weather W2 ON DATEDIFF(W1.recordDate, W2.recordDate) = 1
WHERE W1.temperature > W2.temperature;
Explanation of the Code:

SELECT W1.id: This part of the query specifies that we want to select the id column from the first instance of the Weather table (aliased as W1).

FROM Weather W1: This indicates that the data should be selected from the Weather table, aliased as W1.

JOIN Weather W2 ON DATEDIFF(W1.recordDate, W2.recordDate) = 1: This performs a self-join of the Weather table, where the difference between W1.recordDate and W2.recordDate is exactly 1 day.

WHERE W1.temperature> W2.temperature: This condition filters the rows to include only those where the temperature on the current day (W1) is higher than the temperature on the previous day (W2).

Comments:
This solution efficiently identifies and retrieves the ids of dates with rising temperatures compared to their previous dates.

Make sure the database and table are correctly set up before running the query.