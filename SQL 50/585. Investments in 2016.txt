LeetCode Problem: 585. Investments in 2016
Problem Description:
Table: Insurance

Column Name	Type
pid	int
tiv_2015	float
tiv_2016	float
lat	float
lon	float
pid is the primary key (column with unique values) for this table.

Each row of this table contains information about one policy where:

pid is the policyholder's policy ID.

tiv_2015 is the total investment value in 2015.

tiv_2016 is the total investment value in 2016.

lat is the latitude of the policy holder's city (guaranteed not to be NULL).

lon is the longitude of the policy holder's city (guaranteed not to be NULL).

Task: Write a solution to report the sum of all total investment values in 2016 (tiv_2016), for all policyholders who:

have the same tiv_2015 value as one or more other policyholders, and

are not located in the same city as any other policyholder (i.e., the (lat, lon) attribute pairs must be unique).

Round tiv_2016 to two decimal places.

Example:
Input:

plaintext
Insurance table:
+-----+----------+----------+-----+-----+
| pid | tiv_2015 | tiv_2016 | lat | lon |
+-----+----------+----------+-----+-----+
| 1   | 10       | 5        | 10  | 10  |
| 2   | 20       | 20       | 20  | 20  |
| 3   | 10       | 30       | 20  | 20  |
| 4   | 10       | 40       | 40  | 40  |
+-----+----------+----------+-----+-----+
Output:

plaintext
+----------+
| tiv_2016 |
+----------+
| 45.00    |
+----------+
Explanation:

The first record in the table, like the last record, meets both of the two criteria.

The tiv_2015 value 10 is the same as the third and fourth records, and its location is unique.

The second record does not meet any of the two criteria. Its tiv_2015 is not like any other policyholders and its location is the same as the third record, which makes the third record fail, too.

Solution:
The following SQL query reports the sum of all total investment values in 2016 (tiv_2016) for the qualifying policyholders:

sql
-- SQL Solution to report the sum of all total investment values in 2016 for qualifying policyholders
SELECT 
    ROUND(SUM(tiv_2016), 2) AS tiv_2016
FROM 
    Insurance
WHERE 
    tiv_2015 IN (
        SELECT tiv_2015
        FROM Insurance
        GROUP BY tiv_2015
        HAVING COUNT(*) > 1
    ) 
    AND (lat, lon) IN (
        SELECT lat, lon
        FROM Insurance
        GROUP BY lat, lon
        HAVING COUNT(*) = 1
    );
Explanation of the Code:

Main Query:

SELECT ROUND(SUM(tiv_2016), 2) AS tiv_2016: This part of the query calculates the rounded sum of tiv_2016 values for the qualifying policyholders.

FROM Insurance: This indicates that the data should be selected from the Insurance table.

Subquery for tiv_2015:

SELECT tiv_2015 FROM Insurance GROUP BY tiv_2015 HAVING COUNT() > 1:* This subquery identifies tiv_2015 values that are shared by more than one policyholder.

Subquery for (lat, lon):

SELECT lat, lon FROM Insurance GROUP BY lat, lon HAVING COUNT() = 1:* This subquery identifies unique (lat, lon) pairs.

WHERE Clause:

WHERE tiv_2015 IN (...): Filters the records to include only those with tiv_2015 values shared by more than one policyholder.

AND (lat, lon) IN (...): Filters the records to include only those with unique (lat, lon) pairs.

Comments:
This solution efficiently calculates the sum of all total investment values in 2016 for policyholders who meet the specified criteria, and rounds the result to two decimal places.

Make sure the database and table are correctly set up before running the query.