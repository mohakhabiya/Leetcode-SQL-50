LeetCode Problem: 1327. List the Products Ordered in a Period
Problem Description:
Table: Products

Column Name	Type
product_id	int
product_name	varchar
product_category	varchar
product_id is the primary key (column with unique values) for this table.

This table contains data about the company's products.

Table: Orders

Column Name	Type
product_id	int
order_date	date
unit	int
This table may have duplicate rows.

product_id is a foreign key (reference column) to the Products table.

unit is the number of products ordered on order_date.

Task: Write a solution to get the names of products that have at least 100 units ordered in February 2020 and their amount.

Return: The result table in any order.

Example:
Input:

plaintext
Products table:
+-------------+-----------------------+------------------+
| product_id  | product_name          | product_category |
+-------------+-----------------------+------------------+
| 1           | Leetcode Solutions    | Book             |
| 2           | Jewels of Stringology | Book             |
| 3           | HP                    | Laptop           |
| 4           | Lenovo                | Laptop           |
| 5           | Leetcode Kit          | T-shirt          |
+-------------+-----------------------+------------------+

Orders table:
+--------------+--------------+----------+
| product_id   | order_date   | unit     |
+--------------+--------------+----------+
| 1            | 2020-02-05   | 60       |
| 1            | 2020-02-10   | 70       |
| 2            | 2020-01-18   | 30       |
| 2            | 2020-02-11   | 80       |
| 3            | 2020-02-17   | 2        |
| 3            | 2020-02-24   | 3        |
| 4            | 2020-03-01   | 20       |
| 4            | 2020-03-04   | 30       |
| 4            | 2020-03-04   | 60       |
| 5            | 2020-02-25   | 50       |
| 5            | 2020-02-27   | 50       |
| 5            | 2020-03-01   | 50       |
+--------------+--------------+----------+
Output:

plaintext
+--------------------+---------+
| product_name       | unit    |
+--------------------+---------+
| Leetcode Solutions | 130     |
| Leetcode Kit       | 100     |
+--------------------+---------+
Explanation:

Products with product_id = 1 were ordered in February a total of (60 + 70) = 130 units.

Products with product_id = 2 were ordered in February a total of 80 units.

Products with product_id = 3 were ordered in February a total of (2 + 3) = 5 units.

Products with product_id = 4 were not ordered in February 2020.

Products with product_id = 5 were ordered in February a total of (50 + 50) = 100 units.

Solution:
The following SQL query gets the names of products that have at least 100 units ordered in February 2020 and their amount:

sql
-- SQL Solution to get the names of products that have at least 100 units ordered in February 2020 and their amount
SELECT 
    p.product_name, 
    SUM(o.unit) AS unit
FROM 
    Orders o
JOIN 
    Products p ON o.product_id = p.product_id
WHERE 
    o.order_date BETWEEN '2020-02-01' AND '2020-02-29'
GROUP BY 
    p.product_id, p.product_name
HAVING 
    SUM(o.unit) >= 100;
Explanation of the Code:

SELECT p.product_name, SUM(o.unit) AS unit: This part of the query selects the product names and sums the number of units ordered for each product.

FROM Orders o JOIN Products p ON o.product_id = p.product_id: This joins the Orders table with the Products table based on the product_id.

WHERE o.order_date BETWEEN '2020-02-01' AND '2020-02-29': This filters the orders to include only those placed in February 2020.

GROUP BY p.product_id, p.product_name: This groups the results by product ID and product name to aggregate the data for each product.

HAVING SUM(o.unit) >= 100: This filters the results to include only those products that have at least 100 units ordered.