LeetCode Problem : 1280. Students and Examinations
Table: Students

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| student_id    | int     |
| student_name  | varchar |
+---------------+---------+
student_id is the primary key (column with unique values) for this table.
Each row of this table contains the ID and the name of one student in the school.
 

Table: Subjects

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| subject_name | varchar |
+--------------+---------+
subject_name is the primary key (column with unique values) for this table.
Each row of this table contains the name of one subject in the school.
 

Table: Examinations

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| student_id   | int     |
| subject_name | varchar |
+--------------+---------+
There is no primary key (column with unique values) for this table. It may contain duplicates.
Each student from the Students table takes every course from the Subjects table.
Each row of this table indicates that a student with ID student_id attended the exam of subject_name.
Task: Write a solution to find the number of times each student attended each exam.

Return: The result table ordered by student_id and subject_name.

Example:
Input:

plaintext
Students table:
+------------+--------------+
| student_id | student_name |
+------------+--------------+
| 1          | Alice        |
| 2          | Bob          |
| 13         | John         |
| 6          | Alex         |
+------------+--------------+

Subjects table:
+--------------+
| subject_name |
+--------------+
| Math         |
| Physics      |
| Programming  |
+--------------+

Examinations table:
+------------+--------------+
| student_id | subject_name |
+------------+--------------+
| 1          | Math         |
| 1          | Physics      |
| 1          | Programming  |
| 2          | Programming  |
| 1          | Physics      |
| 1          | Math         |
| 13         | Math         |
| 13         | Programming  |
| 13         | Physics      |
| 2          | Math         |
| 1          | Math         |
+------------+--------------+
Output:

plaintext
+------------+--------------+--------------+----------------+
| student_id | student_name | subject_name | attended_exams |
+------------+--------------+--------------+----------------+
| 1          | Alice        | Math         | 3              |
| 1          | Alice        | Physics      | 2              |
| 1          | Alice        | Programming  | 1              |
| 2          | Bob          | Math         | 1              |
| 2          | Bob          | Physics      | 0              |
| 2          | Bob          | Programming  | 1              |
| 6          | Alex         | Math         | 0              |
| 6          | Alex         | Physics      | 0              |
| 6          | Alex         | Programming  | 0              |
| 13         | John         | Math         | 1              |
| 13         | John         | Physics      | 1              |
| 13         | John         | Programming  | 1              |
+------------+--------------+--------------+----------------+
Explanation:

The result table should contain all students and all subjects.

Alice attended the Math exam 3 times, the Physics exam 2 times, and the Programming exam 1 time.

Bob attended the Math exam 1 time, the Programming exam 1 time, and did not attend the Physics exam.

Alex did not attend any exams.

John attended the Math exam 1 time, the Physics exam 1 time, and the Programming exam 1 time.

Solution:
The following SQL query calculates the number of times each student attended each exam by joining the Students, Subjects, and Examinations tables:

sql
-- SQL Solution to find the number of times each student attended each exam
SELECT 
    S.student_id, 
    S.student_name, 
    SB.subject_name, 
    COUNT(E.student_id) AS attended_exams
FROM 
    Students S
CROSS JOIN 
    Subjects SB
LEFT JOIN 
    Examinations E 
ON 
    S.student_id = E.student_id AND SB.subject_name = E.subject_name
GROUP BY 
    S.student_id, S.student_name, SB.subject_name
ORDER BY 
    S.student_id, SB.subject_name;
Explanation of the Code:

SELECT S.student_id, S.student_name, SB.subject_name, COUNT(E.student_id) AS attended_exams: This part of the query selects the student_id, student_name, subject_name, and counts the number of attended exams (aliasing the count as attended_exams).

FROM Students S: This indicates that the data should be selected from the Students table, aliased as S.

CROSS JOIN Subjects SB: This cross joins the Students table with the Subjects table, ensuring that each student is paired with each subject.

LEFT JOIN Examinations E ON S.student_id = E.student_id AND SB.subject_name = E.subject_name: This performs a left join of the Examinations table with the Students and Subjects tables, joining on student_id and subject_name.

GROUP BY S.student_id, S.student_name, SB.subject_name: This groups the result by student_id, student_name, and subject_name.

ORDER BY S.student_id, SB.subject_name: This orders the result by student_id and subject_name.

Comments:
This solution efficiently identifies and counts the number of times each student attended each exam.

Make sure the database and tables are correctly set up before running the query.